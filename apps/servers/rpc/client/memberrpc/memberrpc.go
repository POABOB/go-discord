// Code generated by goctl. DO NOT EDIT.
// Source: servers.proto

package memberrpc

import (
	"context"

	"github.com/POABOB/go-discord/apps/servers/rpc/pb/rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Channel         = rpc.Channel
	DeleteMemberReq = rpc.DeleteMemberReq
	DeleteServerReq = rpc.DeleteServerReq
	EmptyRes        = rpc.EmptyRes
	GetServerReq    = rpc.GetServerReq
	GetServerRes    = rpc.GetServerRes
	GetServersReq   = rpc.GetServersReq
	GetServersRes   = rpc.GetServersRes
	InviteMemberReq = rpc.InviteMemberReq
	Member          = rpc.Member
	PatchMemberReq  = rpc.PatchMemberReq
	PatchServerReq  = rpc.PatchServerReq
	PostServerReq   = rpc.PostServerReq
	Relation        = rpc.Relation
	Server          = rpc.Server

	MemberRpc interface {
		InviteMember(ctx context.Context, in *InviteMemberReq, opts ...grpc.CallOption) (*GetServerRes, error)
		PatchMember(ctx context.Context, in *PatchMemberReq, opts ...grpc.CallOption) (*GetServerRes, error)
		DeleteMember(ctx context.Context, in *DeleteMemberReq, opts ...grpc.CallOption) (*GetServerRes, error)
	}

	defaultMemberRpc struct {
		cli zrpc.Client
	}
)

func NewMemberRpc(cli zrpc.Client) MemberRpc {
	return &defaultMemberRpc{
		cli: cli,
	}
}

func (m *defaultMemberRpc) InviteMember(ctx context.Context, in *InviteMemberReq, opts ...grpc.CallOption) (*GetServerRes, error) {
	client := rpc.NewMemberRpcClient(m.cli.Conn())
	return client.InviteMember(ctx, in, opts...)
}

func (m *defaultMemberRpc) PatchMember(ctx context.Context, in *PatchMemberReq, opts ...grpc.CallOption) (*GetServerRes, error) {
	client := rpc.NewMemberRpcClient(m.cli.Conn())
	return client.PatchMember(ctx, in, opts...)
}

func (m *defaultMemberRpc) DeleteMember(ctx context.Context, in *DeleteMemberReq, opts ...grpc.CallOption) (*GetServerRes, error) {
	client := rpc.NewMemberRpcClient(m.cli.Conn())
	return client.DeleteMember(ctx, in, opts...)
}
