// Code generated by goctl. DO NOT EDIT.
// Source: profile.proto

package server

import (
	"context"

	"github.com/POABOB/go-discord/apps/profile/rpc/internal/logic/rpc"
	"github.com/POABOB/go-discord/apps/profile/rpc/internal/svc"
	"github.com/POABOB/go-discord/apps/profile/rpc/pb/rpc"
)

type RpcServer struct {
	svcCtx *svc.ServiceContext
	rpc.UnimplementedRpcServer
}

func NewRpcServer(svcCtx *svc.ServiceContext) *RpcServer {
	return &RpcServer{
		svcCtx: svcCtx,
	}
}

func (s *RpcServer) GetUniqueProfileOrCreate(ctx context.Context, in *rpc.GetUniqueProfileOrCreateReq) (*rpc.GetUniqueProfileOrCreateRes, error) {
	l := rpclogic.NewGetUniqueProfileOrCreateLogic(ctx, s.svcCtx)
	return l.GetUniqueProfileOrCreate(in)
}

func (s *RpcServer) PatchProfile(ctx context.Context, in *rpc.PatchProfileReq) (*rpc.Empty, error) {
	l := rpclogic.NewPatchProfileLogic(ctx, s.svcCtx)
	return l.PatchProfile(in)
}

func (s *RpcServer) DeleteProfile(ctx context.Context, in *rpc.DeleteProfileReq) (*rpc.Empty, error) {
	l := rpclogic.NewDeleteProfileLogic(ctx, s.svcCtx)
	return l.DeleteProfile(in)
}
